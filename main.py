import time

def arithmaticOperation(words):
    # creating empty list to store the problems if the given number is < 5
    word = words.split(",")
    lis = []
    for i in word:
        a = i.strip().split(" ")  # removing the empty space at the end and at the beginning
        lis.append(a)  # appending the elements to the list
    return lis


def tooManyProblems(words):
    # Function that checks how many problems have been given
    # splitting the string in where the "," has been used
    word = words.split(",")
    if len(word) > 5:  # if the length of the whole list is > 5 then it will print and exit
        print("Too many problems.")
        exit()


def operatorCheck(lis):
    # Function that checks the operators that have been used by the user
    for i in lis:  # iterating over the list
        if "+" not in i and "-" not in i:  # if the "+" and the "-" symbol is not present in the list, then it will exit
            print("Error: Operator must be '+' or '-'.")
            exit()


def digitsOnlyCheck(lis):
    # Function that checks if the operands contain only digits
    for i in lis:  # iterating over the list
        for j in i:  # iterating over each elements
            if j != "+" and j != "-":  # if the elements is not "+" or "-"
                if not j.isdigit():  # then check if it is digit or not if not print the string and exit
                    print("Error: Numbers must only contain digits.")
                    exit()


def operandWidthCheck(lis):
    # Function that checks if the length of the operands is > 4
    for i in lis:  # iterating over the list
        for j in i:  # iterating over each elements
            if j != "+" and j != "-":  # if the elements is not "+" or "-"
                if len(j) > 4:  # then check if the length is > 4 and print the string and exit
                    print("Error: Numbers cannot be more than four digits.")
                    exit()


def printOperands(lis):
    # Function that prints the operand and the operator
    fOperand = []
    sOperand = []
    oper = []
    for j in range(len(lis)):  # iterating over the length of the list
        firstOperand = lis[j][0]  # first element of each list
        firstOperand = '{:>4}'.format(firstOperand)  # right alignment of the first operand
        fOperand.append(firstOperand)
        operator = lis[j][1]
        oper.append(operator)
        secondOperand = lis[j][2]
        secondOperand = '{:>3}'.format(secondOperand)
        sOperand.append(secondOperand)
    for i in fOperand:
        if len(i)<=3:
            print(i, end="    ")
        else:
            print("",i, end="    ")  # printing the first operand
    print("\n")
    for i in range(len(oper)):
        op = oper[i]
        sop = sOperand[i]
        if len(sop) <=3:
            print(f"{op} {sop}", end="    ")  # printing the operator and the second operand
        else:
            print(f"{op}{sop}", end="    ")

#5 - 5222, 5 + 5222
#55555 - 5222, 5555 + 5222
# 533 - 52, 52 + 5222
# 533 - 523, 5234 + 5222, 5 + 1, 62 - 79
def printDashLines(lis):
    # Function that prints dashed lines under the operations
    print("\n")
    for i in range(len(lis)):
        print(" ----", end="    ")


def operationResults(lis):
    # Function that sums or sub the number depending on the user input
    opList = []
    for j in range(len(lis)):  # iterating over the length of the list
        firstOperand = lis[j][0]  # first operand
        secondOperand = lis[j][2]  # second operand
        if lis[j][1] == "+":  # checking the operation if sum then sum both operands
            sum = int(firstOperand) + int(secondOperand)
            opList.append(sum)  # add the result to the list
        elif lis[j][1] == "-":  # else sub both operands
            sub = int(firstOperand) - int(secondOperand)
            opList.append(sub)  # add the result to the list
    return opList


def printOperationResults(opList, choice):
    # Function that takes as input a list and print the elements on same rows right aligned
    print("\n")
    for i in opList:  # iterating over the list generated by operationResults
        i = '{:>5}'.format(i)  # right alignment
        if choice:
            if len(i) <= 3:
                print("",i, end=" ")  # printing with 4 empty spaces
            else:
                print(i, end="    ")


def main():
    try:
        # Asking for the user input
        userInput = input(
            'Enter the problems separated by a space between the operands and the operation'
            'and separated by comma. For e.g. 4 + 9, 5 + 9...\n')
        # delaying the displaying of the second question by 0.5 seconds
        time.sleep(0.5)
        choice = input("\nDo you want to show the answers? Y(Yes)/N(No): ").upper()
        # if the answer is yes, the functions will be executed otherwise it will not
        if choice == "Y":
            data = arithmaticOperation(userInput)
            tooManyProblems(userInput)
            operatorCheck(data)
            digitsOnlyCheck(data)
            operandWidthCheck(data)
            printOperands(data)
            printDashLines(data)
            operationResults(data)
            printOperationResults(operationResults(data), True)
        else:
            print("\nThanks for using this application.")
    except:
        print("Oops! Something went wrong! Please try again!")


main()
